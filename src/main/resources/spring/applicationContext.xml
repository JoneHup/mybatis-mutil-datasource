<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://cxf.apache.org/jaxws 
						http://cxf.apache.org/schemas/jaxws.xsd"
	>
	
	<!-- 自动注入扫描路径 -->
	<context:component-scan base-package="com.run" />

	<!-- 加载 properties 配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath:jdbc-conf.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- ========================================配置数据源========================================= -->
	<!-- 第一数据源 -->
	<bean id="dataSourceOne" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 第二数据源  -->
	<bean id="dataSourceTwo" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url1}" />
		<property name="username" value="${jdbc.username1}" />
		<property name="password" value="${jdbc.password1}" />
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<!-- data source 抽象类 -->  
	<bean id="dataSource" class="com.run.ds.DynamicDataSource">  
	    <property name="targetDataSources">  
	        <map key-type="java.lang.String">  
	            <entry value-ref="dataSourceOne" key="YEWUDB"></entry>  
	            <entry value-ref="dataSourceTwo" key="SJBDB"></entry>
	        </map>  
	    </property>  
	    <property name="defaultTargetDataSource" ref="dataSourceOne"></property><!-- 默认数据源 -->  
	</bean>
	
	<!-- ========================================分隔线========================================= -->
	
	<!-- aop动态代理 -->
	<aop:aspectj-autoproxy />
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务切面 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>

	<!-- 配置事务切入点 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution (* com.run.service.impl.*.*(..))" />
	</aop:config>
	<!-- ========================================针对myBatis的配置项============================== -->
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描 com.run.dao 这 个包以及它的子包下的所有映射接口类 -->
		<property name="basePackage" value="com.run.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="annotationClass" value="org.springframework.stereotype.Repository"/>
	</bean>

</beans>